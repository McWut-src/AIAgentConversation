instructions: |
  ==== AI Project Manager Instructions ====
  1. Do not mark any task or subtask as "done" unless the related code is fully implemented and verified.
  2. After successful implementation, update:
     - status: "done"
     - completion_note: (brief, commit-style message describing the accomplishment)
     - error_log: (clear this field)
  3. If an error or blocker occurs, update:
     - status: "in_progress" or "failed"
     - error_log: (brief, clear description of the problem)
     - completion_note: (clear this field)
  4. Never skip tasks. Always select the next available task or subtask with status "todo" or "in_progress", in reading order.
  5. Do not update a parent task's status to "done" unless all its subtasks are "done".
  6. All items must have a clear, one-sentence description.
  7. The fields below must be present on every (sub)task:
     - status: "todo" | "in_progress" | "done" | "failed"
     - completion_note: string
     - error_log: string
     - depends_on: [list of task/subtask IDs this task depends on]
     - template_id: (if using a task template)
     - effort: integer (1-10, estimated difficulty/size; if >7, break down further)
  8. If you use a task template, add a template_id and customize as needed.
  9. All detailed planning and status tracking lives in this file; .github/copilot.yml is for high-level automation only.

task_templates:
  - template_id: API_ENDPOINT
    title: "Create API endpoint for {entity}"
    description: "Implement RESTful endpoint for {entity} CRUD operation."
    default_fields:
      status: "todo"
      completion_note: ""
      error_log: ""
      depends_on: []
      effort: 3
    guidance: |
      - Use REST conventions.
      - Validate all input.
      - Add error handling and logging.
      - Write and pass unit tests for all routes.
  
  - template_id: DATABASE_MIGRATION
    title: "Database migration for {entity}"
    description: "Create and apply schema migration for {entity}."
    default_fields:
      status: "todo"
      completion_note: ""
      error_log: ""
      depends_on: []
      effort: 4
    guidance: |
      - Use up/down migration scripts.
      - Ensure migration is idempotent.
      - Test rollback and reapply.
  
  - template_id: UI_COMPONENT
    title: "Develop UI component for {feature}"
    description: "Implement a reusable frontend component for {feature}."
    default_fields:
      status: "todo"
      completion_note: ""
      error_log: ""
      depends_on: []
      effort: 3
    guidance: |
      - Follow design system guidelines.
      - Write component and style tests.
      - Document usage in comments.
  
  - template_id: PROJECT_SETUP
    title: "Set up project for {aspect}"
    description: "Initialize and configure project structure for {aspect}."
    default_fields:
      status: "todo"
      completion_note: ""
      error_log: ""
      depends_on: []
      effort: 3
    guidance: |
      - Create solution and projects.
      - Install NuGet packages.
      - Configure settings and commit initial structure.
  
  - template_id: SERVICE_IMPLEMENTATION
    title: "Implement service for {functionality}"
    description: "Create backend service class for {functionality}."
    default_fields:
      status: "todo"
      completion_note: ""
      error_log: ""
      depends_on: []
      effort: 4
    guidance: |
      - Handle dependencies injection.
      - Implement core logic with error handling.
      - Ensure async operations where applicable.
  
  - template_id: LOGGING_SETUP
    title: "Set up logging with {framework}"
    description: "Configure logging framework for the application."
    default_fields:
      status: "todo"
      completion_note: ""
      error_log: ""
      depends_on: []
      effort: 2
    guidance: |
      - Install NuGet package.
      - Configure in Program.cs.
      - Add basic log statements for verification.

epics:
  - id: E1
    title: "Project Setup and Architecture"
    description: "Initial setup of .NET 8 Core project, simplified database schema with string-based fields, Serilog console-only logging, and core architecture including EF Core and local MSSQL."
    features:
      - id: F1
        title: ".NET Core Project Structure"
        description: "Set up .NET 8 solution with Web/API project using Razor Pages and necessary libraries including Serilog for console-only error logging."
        tasks:
          - id: T1
            title: "Initialize .NET Core solution and projects"
            description: "Create .NET 8 solution file, add Web project with Razor support, and install core NuGet packages including Serilog."
            template_id: PROJECT_SETUP
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: []
            effort: 4
            subtasks:
              - id: ST1
                title: "Create Git repository and solution file"
                description: "Initialize Git repository and add .sln file targeting .NET 8."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST2
                title: "Add ASP.NET Core Web App project with Razor"
                description: "Create ASP.NET Core 8 Web App project with Razor Pages support."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F1-T1-ST1]
                effort: 2
              
              - id: ST3
                title: "Install required NuGet packages"
                description: "Add Microsoft.EntityFrameworkCore.SqlServer, Microsoft.EntityFrameworkCore.Tools, OpenAI SDK, Serilog.AspNetCore, Serilog.Sinks.Console."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F1-T1-ST2]
                effort: 1
              
              - id: ST4
                title: "Create project folder structure"
                description: "Create folders: Controllers, Data, Models, Services, wwwroot/js, wwwroot/css."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F1-T1-ST3]
                effort: 1
              
              - id: ST5
                title: "Commit initial structure"
                description: "Make initial commit with .gitignore and project structure."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F1-T1-ST4]
                effort: 1
          
          - id: T2
            title: "Configure local MSSQL connection"
            description: "Set up connection string in appsettings.json for local MSSQL (LocalDB or Express) and verify EF Core connection."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F1-T1]
            effort: 2
            subtasks:
              - id: ST6
                title: "Add connection string to appsettings.json"
                description: "Configure LocalDB connection string for AIConversations database."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST7
                title: "Test database connection"
                description: "Verify LocalDB is running and connection string works with EF Core."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F1-T2-ST6]
                effort: 1
          
          - id: T3
            title: "Set up Serilog console-only logging"
            description: "Configure Serilog for simplest console-only logging, focusing on error logging."
            template_id: LOGGING_SETUP
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F1-T1]
            effort: 2
            subtasks:
              - id: ST8
                title: "Configure Serilog in Program.cs"
                description: "Add Serilog bootstrap with console sink configuration for error-level logging."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST9
                title: "Add test log statements"
                description: "Insert sample error logs in Program.cs startup to verify Serilog configuration works."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F1-T3-ST8]
                effort: 1
      
      - id: F2
        title: "Simplified Database Schema Design"
        description: "Define entities using EF Core code-first with Agent1Personality, Agent2Personality, and Topic as string fields (no separate tables), no seeding required."
        tasks:
          - id: T4
            title: "Define Conversation entity"
            description: "Create Conversation model with string fields for personalities and topic, fixed IterationCount of 3."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F1-T1]
            effort: 3
            subtasks:
              - id: ST10
                title: "Create Conversation model class"
                description: "Define properties: Id (Guid), Agent1Personality (string 500), Agent2Personality (string 500), Topic (string 1000), IterationCount (int, default 3), Status (string 50), StartTime (DateTime), EndTime (DateTime nullable)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 2
              
              - id: ST11
                title: "Add data annotations"
                description: "Add Required, MaxLength, and default value attributes to Conversation properties."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F2-T4-ST10]
                effort: 1
          
          - id: T5
            title: "Define Message entity"
            description: "Create Message model with ConversationId FK, AgentType (A1/A2), IterationNumber, Content, and Timestamp."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F2-T4]
            effort: 3
            subtasks:
              - id: ST12
                title: "Create Message model class"
                description: "Define properties: Id (Guid), ConversationId (Guid FK), AgentType (string 10), IterationNumber (int), Content (nvarchar max), Timestamp (DateTime)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 2
              
              - id: ST13
                title: "Add navigation properties"
                description: "Add Conversation navigation property to Message and Messages collection to Conversation."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F2-T5-ST12]
                effort: 1
          
          - id: T6
            title: "Configure ApplicationDbContext"
            description: "Create DbContext with DbSets and configure entity relationships using Fluent API."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F2-T5]
            effort: 3
            subtasks:
              - id: ST14
                title: "Create ApplicationDbContext class"
                description: "Define DbContext with DbSet<Conversation> and DbSet<Message>, add constructor with DbContextOptions."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST15
                title: "Configure entity relationships in OnModelCreating"
                description: "Configure one-to-many relationship from Conversation to Messages with cascade delete."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F2-T6-ST14]
                effort: 1
              
              - id: ST16
                title: "Register DbContext in Program.cs"
                description: "Add DbContext to services with SQL Server connection string from configuration."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F2-T6-ST15]
                effort: 1
          
          - id: T7
            title: "Create and apply initial migration"
            description: "Generate EF Core migration for Conversation and Message entities and apply to local database."
            template_id: DATABASE_MIGRATION
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F2-T6]
            effort: 2
            subtasks:
              - id: ST17
                title: "Generate initial migration"
                description: "Run Add-Migration InitialCreate to generate migration files."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST18
                title: "Apply migration to database"
                description: "Run Update-Database to create tables in local MSSQL database."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F2-T7-ST17]
                effort: 1
              
              - id: ST19
                title: "Verify database schema"
                description: "Use SSMS or sqlcmd to verify Conversations and Messages tables exist with correct structure."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E1-F2-T7-ST18]
                effort: 1

  - id: E2
    title: "Backend API Development"
    description: "Backend API for conversation management with OpenAI GPT-3.5-turbo integration using specific prompt format, database interactions, and Serilog error logging with strict workflow adherence."
    features:
      - id: F3
        title: "OpenAI Service Integration"
        description: "Service for calling OpenAI GPT-3.5-turbo API with exact prompt format 'You are {personality}. Respond to the conversation on {topic}: {history}' using simple concatenation."
        tasks:
          - id: T8
            title: "Create OpenAI service interface"
            description: "Define IOpenAIService interface with GenerateResponseAsync method."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F1-T1]
            effort: 2
            subtasks:
              - id: ST20
                title: "Create IOpenAIService interface"
                description: "Define interface with Task<string> GenerateResponseAsync(string personality, string topic, string history) method."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST21
                title: "Add interface to Services folder"
                description: "Place IOpenAIService.cs in Services folder with proper namespace."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F3-T8-ST20]
                effort: 1
          
          - id: T9
            title: "Implement OpenAI service"
            description: "Create OpenAIService class using OpenAI SDK with GPT-3.5-turbo and exact prompt format."
            template_id: SERVICE_IMPLEMENTATION
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F3-T8]
            effort: 6
            subtasks:
              - id: ST22
                title: "Create OpenAIService class"
                description: "Implement IOpenAIService with constructor accepting IConfiguration and ILogger."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST23
                title: "Configure OpenAI client"
                description: "Initialize OpenAI client with API key from configuration (user secrets)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F3-T9-ST22]
                effort: 1
              
              - id: ST24
                title: "Implement GenerateResponseAsync method"
                description: "Build prompt as 'You are {personality}. Respond to the conversation on {topic}: {history}' and call GPT-3.5-turbo with max_tokens 500, temperature 0.7."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F3-T9-ST23]
                effort: 3
              
              - id: ST25
                title: "Add error handling and logging"
                description: "Wrap API call in try-catch, log errors with Serilog, throw exceptions for controller handling."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F3-T9-ST24]
                effort: 1
          
          - id: T10
            title: "Register OpenAI service"
            description: "Add OpenAI service to dependency injection in Program.cs."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F3-T9]
            effort: 1
            subtasks:
              - id: ST26
                title: "Register service in DI container"
                description: "Add builder.Services.AddScoped<IOpenAIService, OpenAIService>() in Program.cs."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
          
          - id: T11
            title: "Configure OpenAI API key in user secrets"
            description: "Set up user secrets for secure API key storage in development."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F3-T9]
            effort: 1
            subtasks:
              - id: ST27
                title: "Initialize user secrets"
                description: "Right-click project, select Manage User Secrets, add OpenAI:ApiKey configuration."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
      
      - id: F4
        title: "Conversation API Endpoints"
        description: "Three API endpoints following strict workflow: init (create + A1), follow (alternate agents), get (markdown output) with fixed 3 iterations."
        tasks:
          - id: T12
            title: "Create ConversationController"
            description: "Set up API controller with dependency injection for DbContext, OpenAIService, and ILogger."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F3-T10, E1-F2-T7]
            effort: 2
            subtasks:
              - id: ST28
                title: "Create controller class"
                description: "Add ConversationController with [ApiController] and [Route('api/conversation')] attributes."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST29
                title: "Add constructor with dependencies"
                description: "Inject ApplicationDbContext, IOpenAIService, and ILogger<ConversationController>."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T12-ST28]
                effort: 1
          
          - id: T13
            title: "Create DTOs for API requests and responses"
            description: "Define data transfer objects for init, follow, and response payloads."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T12]
            effort: 2
            subtasks:
              - id: ST30
                title: "Create InitConversationRequest DTO"
                description: "Define class with Agent1Personality, Agent2Personality, Topic string properties with validation attributes."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST31
                title: "Create FollowConversationRequest DTO"
                description: "Define class with ConversationId Guid property with Required attribute."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST32
                title: "Create ConversationResponse DTO"
                description: "Define class with ConversationId, Message, AgentType, IterationNumber, IsOngoing, TotalMessages properties."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
          
          - id: T14
            title: "Implement POST /api/conversation/init endpoint"
            description: "Create endpoint that accepts personalities/topic, creates conversation, calls A1, saves message, returns first response with isOngoing=true."
            template_id: API_ENDPOINT
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T13]
            effort: 6
            subtasks:
              - id: ST33
                title: "Create Init action method"
                description: "Define async Task<IActionResult> Init([FromBody] InitConversationRequest request) with [HttpPost('init')] attribute."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST34
                title: "Validate input"
                description: "Check ModelState.IsValid, validate string lengths, trim whitespace, return BadRequest if invalid."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T14-ST33]
                effort: 1
              
              - id: ST35
                title: "Create Conversation entity"
                description: "Instantiate Conversation with personalities/topic as strings, IterationCount=3, Status='InProgress', StartTime=now."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T14-ST34]
                effort: 1
              
              - id: ST36
                title: "Call OpenAI for Agent 1"
                description: "Call IOpenAIService.GenerateResponseAsync(request.Agent1Personality, request.Topic, '') with empty history."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T14-ST35]
                effort: 1
              
              - id: ST37
                title: "Save Conversation and first Message"
                description: "Add Conversation to DbContext, create Message (AgentType='A1', IterationNumber=1), SaveChangesAsync."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T14-ST36]
                effort: 1
              
              - id: ST38
                title: "Return response with isOngoing=true"
                description: "Build ConversationResponse with conversationId, message, agentType='A1', iterationNumber=1, isOngoing=true, totalMessages=1."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T14-ST37]
                effort: 1
              
              - id: ST39
                title: "Add error handling"
                description: "Wrap in try-catch, log errors with Serilog, return 500 with error message on failure."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T14-ST38]
                effort: 1
          
          - id: T15
            title: "Implement POST /api/conversation/follow endpoint"
            description: "Create endpoint that retrieves conversation, determines next agent (alternating), builds history, calls OpenAI, saves message, returns with isOngoing flag."
            template_id: API_ENDPOINT
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T14]
            effort: 7
            subtasks:
              - id: ST40
                title: "Create Follow action method"
                description: "Define async Task<IActionResult> Follow([FromBody] FollowConversationRequest request) with [HttpPost('follow')] attribute."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST41
                title: "Retrieve conversation and messages"
                description: "Load Conversation by Id with Include(Messages), check if exists and not completed, return 404/400 if invalid."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST40]
                effort: 1
              
              - id: ST42
                title: "Calculate next agent and iteration"
                description: "Count messages, determine next agent (odd count → A2, even → A1), calculate iteration number ((count / 2) + 1)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST41]
                effort: 2
              
              - id: ST43
                title: "Build concatenated history"
                description: "Create history string by concatenating messages as 'A1: msg1\\nA2: msg2\\n...' ordered by Timestamp."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST42]
                effort: 1
              
              - id: ST44
                title: "Call OpenAI for next agent"
                description: "Call IOpenAIService.GenerateResponseAsync with appropriate personality, topic, and concatenated history."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST43]
                effort: 1
              
              - id: ST45
                title: "Save new Message"
                description: "Create Message with AgentType, IterationNumber, Content, Timestamp, add to DbContext."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST44]
                effort: 1
              
              - id: ST46
                title: "Check completion and update status"
                description: "If totalMessages == 6, set conversation Status='Completed', EndTime=now, isOngoing=false; else isOngoing=true."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST45]
                effort: 1
              
              - id: ST47
                title: "Return response"
                description: "Build ConversationResponse with message, agentType, iterationNumber, isOngoing flag, totalMessages, SaveChangesAsync and return Ok."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST46]
                effort: 1
              
              - id: ST48
                title: "Add error handling"
                description: "Wrap in try-catch, log errors with Serilog, return appropriate status codes on failure."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T15-ST47]
                effort: 1
          
          - id: T16
            title: "Implement GET /api/conversation/{id} endpoint"
            description: "Create endpoint that retrieves completed conversation and returns all messages formatted as markdown."
            template_id: API_ENDPOINT
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T15]
            effort: 4
            subtasks:
              - id: ST49
                title: "Create Get action method"
                description: "Define async Task<IActionResult> Get(Guid id) with [HttpGet('{id}')] attribute."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST50
                title: "Retrieve and validate conversation"
                description: "Load Conversation by Id with Messages, verify Status=='Completed', return 404 if not found or not completed."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T16-ST49]
                effort: 1
              
              - id: ST51
                title: "Format messages as markdown"
                description: "Build markdown string as '**A1:** msg1\\n**A2:** msg2\\n...' ordered by Timestamp, no extra formatting."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T16-ST50]
                effort: 1
              
              - id: ST52
                title: "Return markdown response"
                description: "Create response object with conversationId, markdown, personalities, topic, status, messageCount and return Ok."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E2-F4-T16-ST51]
                effort: 1

  - id: E3
    title: "Frontend UI Development"
    description: "Single-page Razor UI with text inputs, real-time SMS-style bubble display, static waiting indicator, error handling, and markdown final view."
    features:
      - id: F5
        title: "Razor Page with Input Form"
        description: "Create Index.cshtml with text inputs for personalities and topic, start button, and conversation display area."
        tasks:
          - id: T17
            title: "Create Index Razor Page"
            description: "Develop Index.cshtml and Index.cshtml.cs with minimal page model."
            template_id: UI_COMPONENT
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T16]
            effort: 4
            subtasks:
              - id: ST53
                title: "Create Index.cshtml file"
                description: "Add Razor page in Pages folder with @page directive and @model."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST54
                title: "Add input form HTML"
                description: "Create form with three text inputs (Agent1Personality, Agent2Personality, Topic) and Start Conversation button with IDs."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T17-ST53]
                effort: 2
              
              - id: ST55
                title: "Add conversation display containers"
                description: "Add empty div for conversation bubbles (id='conversation-container') and markdown display (id='markdown-container', hidden)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T17-ST54]
                effort: 1
              
              - id: ST56
                title: "Create minimal PageModel"
                description: "Add Index.cshtml.cs with empty PageModel class (no server-side logic needed)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T17-ST55]
                effort: 1
          
          - id: T18
            title: "Apply minimal CSS styling"
            description: "Create basic CSS for form layout and message bubbles (A1 left blue, A2 right green) without external frameworks."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F5-T17]
            effort: 3
            subtasks:
              - id: ST57
                title: "Create site.css file"
                description: "Add or update wwwroot/css/site.css with basic styles."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST58
                title: "Style input form"
                description: "Add CSS for form layout, input fields, and button with basic spacing and alignment."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T18-ST57]
                effort: 1
              
              - id: ST59
                title: "Style message bubbles"
                description: "Add CSS for .message-bubble-a1 (left-aligned, blue background) and .message-bubble-a2 (right-aligned, green background)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T18-ST58]
                effort: 1
              
              - id: ST60
                title: "Style waiting indicator"
                description: "Add CSS for .waiting-indicator with simple text styling (no animation)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T18-ST59]
                effort: 1
              
              - id: ST61
                title: "Style markdown container"
                description: "Add CSS for markdown display area with basic typography and spacing."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F5-T18-ST60]
                effort: 1
      
      - id: F6
        title: "JavaScript Client Logic"
        description: "Implement JavaScript for API calls, bubble display management, waiting indicators, and markdown rendering with error handling."
        tasks:
          - id: T19
            title: "Create conversation.js file"
            description: "Set up JavaScript file with global variables and function structure."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F5-T18]
            effort: 2
            subtasks:
              - id: ST62
                title: "Create wwwroot/js/conversation.js"
                description: "Add JavaScript file and reference it in Index.cshtml."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST63
                title: "Define global variables"
                description: "Add let conversationId = null and let isConversationOngoing = false at file top."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T19-ST62]
                effort: 1
          
          - id: T20
            title: "Implement startConversation function"
            description: "Create function to handle Start button click, validate inputs, call init API, and display first message."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T19]
            effort: 5
            subtasks:
              - id: ST64
                title: "Create startConversation function"
                description: "Define async function startConversation() and attach to button click event."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST65
                title: "Get and validate input values"
                description: "Get values from three text inputs, trim whitespace, validate not empty, show error if invalid."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T20-ST64]
                effort: 1
              
              - id: ST66
                title: "Show initial waiting indicator"
                description: "Clear conversation container, append static '...' element with class .waiting-indicator aligned left."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T20-ST65]
                effort: 1
              
              - id: ST67
                title: "Call init API endpoint"
                description: "Use fetch POST to /api/conversation/init with JSON body containing personalities and topic."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T20-ST66]
                effort: 1
              
              - id: ST68
                title: "Handle init response"
                description: "Store conversationId, remove waiting indicator, append A1 message bubble (left, blue), check isOngoing flag."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T20-ST67]
                effort: 1
              
              - id: ST69
                title: "Trigger follow if ongoing"
                description: "If isOngoing==true, show waiting indicator (right) and call continueConversation()."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T20-ST68]
                effort: 1
          
          - id: T21
            title: "Implement continueConversation function"
            description: "Create function to call follow API, display messages, and loop until conversation completes."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T20]
            effort: 6
            subtasks:
              - id: ST70
                title: "Create continueConversation function"
                description: "Define async function continueConversation() that calls follow endpoint."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST71
                title: "Call follow API endpoint"
                description: "Use fetch POST to /api/conversation/follow with conversationId in JSON body."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T21-ST70]
                effort: 1
              
              - id: ST72
                title: "Handle follow response"
                description: "Remove waiting indicator, append message bubble (A1 left blue or A2 right green based on agentType)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T21-ST71]
                effort: 2
              
              - id: ST73
                title: "Check ongoing flag and recurse"
                description: "If isOngoing==true, show next waiting indicator (opposite side) and call continueConversation() again; else call displayMarkdown()."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T21-ST72]
                effort: 2
          
          - id: T22
            title: "Implement displayMarkdown function"
            description: "Create function to fetch complete conversation and display in markdown format."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T21]
            effort: 3
            subtasks:
              - id: ST74
                title: "Create displayMarkdown function"
                description: "Define async function displayMarkdown() that fetches conversation by ID."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST75
                title: "Call get API endpoint"
                description: "Use fetch GET to /api/conversation/{conversationId} to retrieve markdown."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T22-ST74]
                effort: 1
              
              - id: ST76
                title: "Display markdown content"
                description: "Clear conversation container, show markdown container with innerHTML set to formatted markdown (preserve line breaks)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T22-ST75]
                effort: 1
          
          - id: T23
            title: "Implement error handling"
            description: "Add error handling for all API calls with user-friendly error display and console logging."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T22]
            effort: 3
            subtasks:
              - id: ST77
                title: "Create displayError function"
                description: "Define function displayError(message) that shows error in UI and logs to console."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST78
                title: "Add try-catch to all API calls"
                description: "Wrap fetch calls in try-catch blocks, handle network errors and non-200 responses."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T23-ST77]
                effort: 1
              
              - id: ST79
                title: "Stop further calls on error"
                description: "Set flag to prevent additional API calls after error, clear waiting indicators."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E3-F6-T23-ST78]
                effort: 1
          
          - id: T24
            title: "Implement helper functions"
            description: "Create utility functions for creating bubble elements and waiting indicators."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T23]
            effort: 2
            subtasks:
              - id: ST80
                title: "Create createMessageBubble function"
                description: "Define function createMessageBubble(message, agentType) that returns DOM element with appropriate class."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST81
                title: "Create createWaitingIndicator function"
                description: "Define function createWaitingIndicator(side) that returns static '...' element aligned left or right."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1

  - id: E4
    title: "Security and Configuration"
    description: "Basic security measures including API key management, input validation, and CORS configuration for local development."
    features:
      - id: F7
        title: "Security Configuration"
        description: "Implement basic security with API key protection and input sanitization."
        tasks:
          - id: T25
            title: "Configure API key security"
            description: "Set up secure storage for OpenAI API key using user secrets and environment variables."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F3-T11]
            effort: 2
            subtasks:
              - id: ST82
                title: "Document user secrets setup"
                description: "Add instructions to README.md for configuring user secrets in Visual Studio."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST83
                title: "Add environment variable fallback"
                description: "Configure Program.cs to read API key from environment variables if user secrets not available."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E4-F7-T25-ST82]
                effort: 1
          
          - id: T26
            title: "Implement input validation and sanitization"
            description: "Add validation attributes and sanitization logic for all API inputs."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T13]
            effort: 3
            subtasks:
              - id: ST84
                title: "Add validation attributes to DTOs"
                description: "Add [Required], [MaxLength], [MinLength] attributes to request DTO properties."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST85
                title: "Implement input sanitization"
                description: "Add string trimming, HTML encoding, and length validation in controller actions."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E4-F7-T26-ST84]
                effort: 1
              
              - id: ST86
                title: "Add model validation error handling"
                description: "Return 400 BadRequest with validation errors if ModelState.IsValid is false."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E4-F7-T26-ST85]
                effort: 1
          
          - id: T27
            title: "Configure CORS for local development"
            description: "Set up CORS policy to allow requests from Razor page to API endpoints."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T12]
            effort: 2
            subtasks:
              - id: ST87
                title: "Add CORS policy in Program.cs"
                description: "Configure CORS to allow same-origin requests for local development."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST88
                title: "Enable CORS middleware"
                description: "Add app.UseCors() in middleware pipeline before UseAuthorization."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E4-F7-T27-ST87]
                effort: 1

  - id: E5
    title: "Testing and Documentation"
    description: "Manual testing procedures, API documentation, UI usage guide, and project README with Visual Studio and GitHub Copilot setup instructions."
    features:
      - id: F8
        title: "Project Documentation"
        description: "Create comprehensive documentation for setup, usage, and development."
        tasks:
          - id: T28
            title: "Complete README.md"
            description: "Write comprehensive README with setup instructions, Visual Studio configuration, and GitHub Copilot usage."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E1-F1-T1]
            effort: 4
            subtasks:
              - id: ST89
                title: "Add project overview section"
                description: "Write introduction, features list, and architecture diagram in README."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST90
                title: "Document installation steps"
                description: "Write detailed installation instructions for Visual Studio 2022, .NET 8, LocalDB, and NuGet packages."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T28-ST89]
                effort: 1
              
              - id: ST91
                title: "Document configuration"
                description: "Explain appsettings.json, user secrets, and OpenAI API key setup."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T28-ST90]
                effort: 1
              
              - id: ST92
                title: "Add Visual Studio and Copilot setup"
                description: "Write section on configuring Visual Studio with GitHub Copilot for this project."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T28-ST91]
                effort: 1
              
              - id: ST93
                title: "Document workflow adherence"
                description: "Add detailed workflow section emphasizing strict requirements (fixed iterations, prompt format, agent alternation)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T28-ST92]
                effort: 1
          
          - id: T29
            title: "Create API.md documentation"
            description: "Write detailed API endpoint documentation with request/response examples and workflow notes."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T16]
            effort: 3
            subtasks:
              - id: ST94
                title: "Document init endpoint"
                description: "Write specifications for POST /api/conversation/init with examples, including exact prompt format used."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST95
                title: "Document follow endpoint"
                description: "Write specifications for POST /api/conversation/follow with agent alternation logic and history concatenation details."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T29-ST94]
                effort: 1
              
              - id: ST96
                title: "Document get endpoint"
                description: "Write specifications for GET /api/conversation/{id} with markdown format details."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T29-ST95]
                effort: 1
              
              - id: ST97
                title: "Add workflow examples"
                description: "Include complete API call sequence example showing all 6 messages (init + 5 follow calls)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T29-ST96]
                effort: 1
          
          - id: T30
            title: "Create UI.md documentation"
            description: "Write UI usage guide with details on text inputs, real-time display, and markdown transition."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T24]
            effort: 2
            subtasks:
              - id: ST98
                title: "Document input form usage"
                description: "Explain text inputs for personalities and topic, with examples."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST99
                title: "Document conversation display"
                description: "Explain SMS-style bubbles, static waiting indicator, and agent alignment (A1 left, A2 right)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T30-ST98]
                effort: 1
              
              - id: ST100
                title: "Document markdown view"
                description: "Explain transition from bubbles to markdown after 6 messages, and stateless behavior (new conversation on refresh)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T30-ST99]
                effort: 1
              
              - id: ST101
                title: "Document error handling"
                description: "Explain how errors are displayed and that page refresh is needed to start new conversation after error."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F8-T30-ST100]
                effort: 1
      
      - id: F9
        title: "Manual Testing"
        description: "Perform comprehensive manual testing of complete workflow."
        tasks:
          - id: T31
            title: "Create testing checklist"
            description: "Develop comprehensive 15-point checklist for workflow adherence testing."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T24]
            effort: 2
            subtasks:
              - id: ST102
                title: "Create workflow verification checklist"
                description: "Document 15 verification points covering database, API, and UI requirements."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST103
                title: "Create SQL verification queries"
                description: "Write SQL queries to verify conversation and message data in database."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T31-ST102]
                effort: 1
          
          - id: T32
            title: "Test init endpoint"
            description: "Manually test conversation initialization with various inputs."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T14, E5-F9-T31]
            effort: 3
            subtasks:
              - id: ST104
                title: "Test valid init request"
                description: "POST valid personalities and topic, verify A1 message returned, check database record created."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST105
                title: "Test invalid init request"
                description: "POST empty/null values, verify 400 BadRequest returned with validation errors."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T32-ST104]
                effort: 1
              
              - id: ST106
                title: "Verify OpenAI prompt format"
                description: "Check Serilog output to confirm prompt matches exact format: 'You are {personality}. Respond to the conversation on {topic}: '"
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T32-ST105]
                effort: 1
          
          - id: T33
            title: "Test follow endpoint"
            description: "Manually test conversation continuation through all 5 follow calls."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T15, E5-F9-T32]
            effort: 4
            subtasks:
              - id: ST107
                title: "Test follow calls 1-5"
                description: "POST follow requests sequentially, verify agent alternation (A2, A1, A2, A1, A2), check iteration numbers."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 2
              
              - id: ST108
                title: "Verify history concatenation"
                description: "Check Serilog output to confirm history format: 'A1: msg1\\nA2: msg2\\n...'"
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T33-ST107]
                effort: 1
              
              - id: ST109
                title: "Verify completion flag"
                description: "Confirm isOngoing=true for calls 1-4, isOngoing=false after 6th message, Status updated to 'Completed'."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T33-ST108]
                effort: 1
          
          - id: T34
            title: "Test get endpoint"
            description: "Manually test markdown retrieval after conversation completion."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E2-F4-T16, E5-F9-T33]
            effort: 2
            subtasks:
              - id: ST110
                title: "Test completed conversation"
                description: "GET conversation by ID after completion, verify markdown format '**A1:** msg\\n**A2:** msg'."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST111
                title: "Test incomplete conversation"
                description: "GET conversation by ID before completion, verify 404 or appropriate error returned."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T34-ST110]
                effort: 1
          
          - id: T35
            title: "Test complete UI flow"
            description: "End-to-end testing through web interface."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E3-F6-T24, E5-F9-T34]
            effort: 5
            subtasks:
              - id: ST112
                title: "Test successful conversation flow"
                description: "Enter personalities/topic, click start, verify 6 bubbles appear with correct alignment, verify markdown displays."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 2
              
              - id: ST113
                title: "Verify waiting indicators"
                description: "Confirm static '...' appears before each agent response with correct alignment (left for A1, right for A2)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T35-ST112]
                effort: 1
              
              - id: ST114
                title: "Test error scenarios"
                description: "Test with invalid OpenAI key, network errors, verify error display and no further calls made."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T35-ST113]
                effort: 1
              
              - id: ST115
                title: "Verify stateless behavior"
                description: "Refresh page during/after conversation, verify new conversation starts (conversationId not persisted)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T35-ST114]
                effort: 1
          
          - id: T36
            title: "Verify database state"
            description: "Use SQL queries to verify correct data storage."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E5-F9-T35]
            effort: 3
            subtasks:
              - id: ST116
                title: "Verify Conversations table"
                description: "Check that personalities and topic stored as strings, IterationCount=3, Status transitions correctly."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST117
                title: "Verify Messages table"
                description: "Check that 6 messages exist with correct AgentType (A1, A2, A1, A2, A1, A2), IterationNumber (1,1,2,2,3,3)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T36-ST116]
                effort: 1
              
              - id: ST118
                title: "Verify no orphaned data"
                description: "Confirm foreign key relationships correct, no missing conversations or messages."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E5-F9-T36-ST117]
                effort: 1

  - id: E6
    title: "Final Review and Deployment Preparation"
    description: "Final code review, documentation review, and preparation for local deployment with Visual Studio."
    features:
      - id: F10
        title: "Code Review and Cleanup"
        description: "Review all code for consistency, remove unused code, ensure best practices."
        tasks:
          - id: T37
            title: "Perform code review"
            description: "Review all code files for consistency with project_board.yaml specifications."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E5-F9-T36]
            effort: 4
            subtasks:
              - id: ST119
                title: "Review entity models"
                description: "Verify entities match specifications (string fields, no extra tables, correct relationships)."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST120
                title: "Review API endpoints"
                description: "Verify exact prompt format, agent alternation logic, isOngoing flag logic, history concatenation."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T37-ST119]
                effort: 1
              
              - id: ST121
                title: "Review UI code"
                description: "Verify text inputs (not dropdowns), static waiting indicator, stateless design, conversationId in JS variable."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T37-ST120]
                effort: 1
              
              - id: ST122
                title: "Remove unused code"
                description: "Delete any unused files, commented code, or test scaffolding."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T37-ST121]
                effort: 1
          
          - id: T38
            title: "Review and finalize documentation"
            description: "Ensure all documentation is complete, accurate, and consistent."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E5-F8-T30, E6-F10-T37]
            effort: 3
            subtasks:
              - id: ST123
                title: "Review README.md"
                description: "Verify installation steps, configuration, workflow sections are accurate and complete."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST124
                title: "Review API.md"
                description: "Verify endpoint documentation matches implementation, examples are correct."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T38-ST123]
                effort: 1
              
              - id: ST125
                title: "Review UI.md"
                description: "Verify UI guide matches actual behavior, includes error handling and stateless notes."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T38-ST124]
                effort: 1
          
          - id: T39
            title: "Prepare for deployment"
            description: "Final checks and preparation for running in Visual Studio locally."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E6-F10-T38]
            effort: 3
            subtasks:
              - id: ST126
                title: "Verify all configuration files"
                description: "Check appsettings.json, appsettings.Development.json, launchSettings.json are correct."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST127
                title: "Create deployment checklist"
                description: "Document steps to run application: restore packages, apply migrations, set API key, run."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T39-ST126]
                effort: 1
              
              - id: ST128
                title: "Test clean installation"
                description: "Clone repository to new location, follow README steps, verify application runs successfully."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T39-ST127]
                effort: 1
          
          - id: T40
            title: "Update project_board.yaml with final status"
            description: "Mark all completed tasks as done with completion notes."
            status: todo
            completion_note: ""
            error_log: ""
            depends_on: [E6-F10-T39]
            effort: 2
            subtasks:
              - id: ST129
                title: "Review all task statuses"
                description: "Go through every task and subtask, verify status reflects actual completion."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: []
                effort: 1
              
              - id: ST130
                title: "Add completion notes"
                description: "For each done task, add brief commit-style completion_note describing accomplishment."
                status: todo
                completion_note: ""
                error_log: ""
                depends_on: [E6-F10-T40-ST129]
                effort: 1

workflow_verification:
  critical_requirements:
    - requirement: "Conversation entity stores Agent1Personality, Agent2Personality, Topic as strings (not foreign keys)"
      verification: "Check Conversation.cs model - all three fields must be string type with no navigation properties"
      
    - requirement: "No separate Personalities or Topics tables"
      verification: "Check Data folder - only ApplicationDbContext, Conversation, Message entities should exist"
      
    - requirement: "IterationCount fixed at 3 (not user-configurable)"
      verification: "Check Conversation entity default value, check API endpoints do not accept iteration parameter"
      
    - requirement: "OpenAI prompt format exactly: 'You are {personality}. Respond to the conversation on {topic}: {history}'"
      verification: "Check OpenAIService.cs - prompt construction must match this exact format"
      
    - requirement: "History is simple concatenation: 'A1: msg1\\nA2: msg2\\n...'"
      verification: "Check follow endpoint history building logic - must be string concatenation, not structured format"
      
    - requirement: "Agent alternation: odd message count → A2, even message count → A1"
      verification: "Check follow endpoint logic - must calculate next agent based on message count modulo"
      
    - requirement: "isOngoing flag false only when totalMessages == 6"
      verification: "Check follow endpoint completion logic - must check exact count of 6"
      
    - requirement: "Markdown format: '**A1:** msg\\n**A2:** msg\\n...'"
      verification: "Check get endpoint formatting logic - must match this exact format with bold markers"
      
    - requirement: "UI uses text inputs (not dropdowns)"
      verification: "Check Index.cshtml - must have <input type='text'> elements, no <select> elements"
      
    - requirement: "Static '...' waiting indicator (not CSS animated)"
      verification: "Check conversation.js and site.css - waiting indicator must be plain text, no keyframe animations"
      
    - requirement: "ConversationId stored in JavaScript variable (not session/cookie)"
      verification: "Check conversation.js - must have 'let conversationId' variable, no localStorage/sessionStorage"
      
    - requirement: "Stateless design - new conversation per page refresh"
      verification: "Check that no session state or persistent storage is used for conversationId"
      
    - requirement: "Serilog console-only logging"
      verification: "Check Program.cs Serilog configuration - must have only console sink, no file sink"
      
    - requirement: "Using GPT-3.5-turbo model"
      verification: "Check OpenAIService.cs - model parameter must be 'gpt-3.5-turbo'"
      
    - requirement: "Fixed 6 messages total (3 iterations, 2 messages each)"
      verification: "Check database after complete conversation - must have exactly 6 messages with correct AgentType and IterationNumber values"

testing_scenarios:
  - scenario: "Complete Happy Path"
    steps:
      - "Open browser to https://localhost:5001"
      - "Enter Agent1: 'Logical analyst', Agent2: 'Creative poet', Topic: 'Space exploration'"
      - "Click Start Conversation"
      - "Verify 6 bubbles appear: A1 left, A2 right, A1 left, A2 right, A1 left, A2 right"
      - "Verify markdown displays with 6 messages after completion"
      - "Check database: 1 conversation with Status='Completed', 6 messages with correct alternation"
    expected_result: "Successful conversation with proper display and data storage"
    
  - scenario: "Database Verification"
    steps:
      - "Run SQL: SELECT * FROM Conversations WHERE Status='Completed'"
      - "Verify Agent1Personality, Agent2Personality, Topic are string values"
      - "Verify IterationCount = 3"
      - "Run SQL: SELECT AgentType, IterationNumber FROM Messages WHERE ConversationId = @id ORDER BY Timestamp"
      - "Verify sequence: A1-1, A2-1, A1-2, A2-2, A1-3, A2-3"
    expected_result: "Database contains correct structure and values"
    
  - scenario: "API Endpoint Testing"
    steps:
      - "POST /api/conversation/init with valid data"
      - "Verify response has isOngoing=true, agentType='A1', iterationNumber=1"
      - "POST /api/conversation/follow 5 times with returned conversationId"
      - "Verify agents alternate: A2, A1, A2, A1, A2"
      - "Verify last response has isOngoing=false"
      - "GET /api/conversation/{id}"
      - "Verify markdown format correct"
    expected_result: "All API calls succeed with correct data"
    
  - scenario: "Error Handling"
    steps:
      - "Enter invalid OpenAI API key in user secrets"
      - "Start conversation"
      - "Verify error message displays in UI"
      - "Verify no further API calls made"
      - "Check Serilog console for error log"
      - "Refresh page"
      - "Verify can start new conversation"
    expected_result: "Errors handled gracefully with clear messaging"
    
  - scenario: "Stateless Verification"
    steps:
      - "Start conversation and get through 3 messages"
      - "Refresh browser page"
      - "Verify conversation display clears"
      - "Start new conversation"
      - "Verify new conversation starts (different conversationId)"
      - "Check database for 2 separate conversations"
    expected_result: "No conversation state persists across page loads"

github_copilot_usage:
  instructions: "Use the copilot_instructions.md file for detailed guidance"
  workflow:
    - "Reference project_board.yaml for every task"
    - "Work through epics and features sequentially"
    - "Mark tasks as done only after verification"
    - "Use @workspace commands to reference project files"
    - "Verify against workflow_verification critical requirements"
    - "Run testing scenarios before marking epic complete"
  
  example_commands:
    - command: "@workspace Following project_board.yaml E1-F2-T4-ST10, create the Conversation entity model"
      purpose: "Generate specific code component"
      
    - command: "@workspace Verify this implementation matches the requirement: 'OpenAI prompt format exactly: You are {personality}. Respond to the conversation on {topic}: {history}'"
      purpose: "Validate against critical requirement"
      
    - command: "@workspace Show me the current status of all tasks in Epic E2"
      purpose: "Check progress"
      
    - command: "@workspace Generate the follow endpoint logic that alternates agents based on odd/even message count"
      purpose: "Generate specific algorithm"
      
    - command: "@workspace Compare my Conversation entity with project_board.yaml requirements and list any deviations"
      purpose: "Verify compliance"

notes:
  - "This project board follows strict specifications - DO NOT deviate from requirements"
  - "Fixed iterations (3), fixed message count (6), and exact prompt format are CRITICAL"
  - "Simplified design: no separate tables for personalities/topics, no seeding, no auth"
  - "Stateless UI design: no session management, conversationId in JavaScript only"
  - "Use Serilog for error logging to console only (no file logging in v1.0)"
  - "All string inputs (no dropdowns), static waiting indicator (no CSS animation)"
  - "Agent alternation must follow exact pattern: A1, A2, A1, A2, A1, A2"
  - "History concatenation must be simple string joining, not structured format"
  - "Mark tasks done ONLY after code is implemented AND verified"
  - "Update completion_note with brief commit-style message on completion"
  - "Update error_log with clear description if task fails or blocks"
  - "Never skip dependencies - complete tasks in order"
  - "Parent task status = done only when ALL subtasks = done"

project_metadata:
  version: "1.0.0"
  created: "2025-09-30"
  last_updated: "2025-09-30"
  total_epics: 6
  total_features: 10
  total_tasks: 40
  total_subtasks: 130
  estimated_effort_points: 185
  target_completion: "October 2025"
  technology_stack:
    - ".NET 8"
    - "ASP.NET Core 8 with Razor Pages"
    - "Entity Framework Core 8"
    - "Microsoft SQL Server (LocalDB/Express)"
    - "OpenAI API (GPT-3.5-turbo)"
    - "Serilog"
    - "JavaScript (ES6+)"
    - "CSS3 (no frameworks)"